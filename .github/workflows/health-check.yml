name: Health Check and OCI Instance Restart

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:        # Allows manual execution

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup OCI CLI and Key
      run: |
        echo "Installing OCI CLI..."
        curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh -o install-oci-cli.sh
        bash install-oci-cli.sh --accept-all-defaults
        echo "$HOME/bin" >> $GITHUB_PATH

        echo "Creating OCI API key file..."
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_KEY_FILE }}" > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem

    - name: Verify OCI Configuration
      run: oci iam region list
      env:
        OCI_USER: ${{ secrets.OCI_USER_OCID }}
        OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
        OCI_TENANCY: ${{ secrets.OCI_TENANCY_OCID }}
        OCI_REGION: ${{ secrets.OCI_REGION }}
        OCI_KEY_FILE: ~/.oci/oci_api_key.pem

    - name: Run Health Check Script
      run: |
        chmod +x health-check.sh
        ./health-check.sh
      env:
        NODE1_INSTANCE_ID: ${{ vars.NODE1_INSTANCE_ID }}
        NODE2_INSTANCE_ID: ${{ secrets.NODE2_INSTANCE_ID }}
        OCI_USER: ${{ secrets.OCI_USER_OCID }}
        OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
        OCI_TENANCY: ${{ secrets.OCI_TENANCY_OCID }}
        OCI_REGION: ${{ secrets.OCI_REGION }}
        OCI_KEY_FILE: ~/.oci/oci_api_key.pem

    - name: Upload Logs on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: healthcheck-logs
        path: logs/