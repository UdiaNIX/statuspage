name: Health Check and OCI Instance Restart

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:        # Allows manual execution

jobs:
  health-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup OCI CLI and Key
      run: |
        echo "Installing OCI CLI..."
        curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh -o install-oci-cli.sh
        bash install-oci-cli.sh --accept-all-defaults
        echo "$HOME/bin" >> $GITHUB_PATH

        echo "Creating OCI config and API key files..."
        mkdir -p ~/.oci

        cat > ~/.oci/config << EOF
        [DEFAULT]
        user=${{ secrets.OCI_USER_OCID }}
        fingerprint=${{ secrets.OCI_FINGERPRINT }}
        tenancy=${{ secrets.OCI_TENANCY_OCID }}
        region=${{ secrets.OCI_REGION }}
        key_file=~/.oci/oci_api_key.pem
        EOF

        echo "${{ secrets.OCI_KEY_FILE }}" > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem

    - name: Verify OCI Configuration
      run: |
        oci --version
        oci iam region list

    - name: Debug - Test URLs
      run: |
        echo "Testing URL connectivity..."
        for url in https://udianix.com.br https://ollama.udianix.com.br; do
          echo "Testing $url"
          curl -I --connect-timeout 5 --max-time 10 "$url" || echo "Failed to connect to $url"
        done

    - name: Run Health Check Script
      run: |
        chmod +x health-check.sh
        ./health-check.sh
      env:
        NODE1_INSTANCE_ID: ${{ vars.NODE1_INSTANCE_ID }}
        NODE2_INSTANCE_ID: ${{ vars.NODE2_INSTANCE_ID }}

    - name: Upload Logs on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: healthcheck-logs
        path: logs/