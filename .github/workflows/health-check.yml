permissions:
  contents: read
name: Health Check and OCI Instance Restart

on:
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest
    # Adicione o nome do seu ambiente aqui.
    # Isso Ã© crucial para que o workflow possa acessar os 'Environment secrets'.
    environment: github-pages
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup and Authenticate OCI
      run: |
        echo "Installing OCI CLI..."
        pip install oci-cli
        echo "$HOME/.local/bin" >> $GITHUB_PATH

        echo "Creating OCI config and key files..."
        mkdir -p ~/.oci

        # Create the OCI config file from secrets
        cat > ~/.oci/config << EOF
        [DEFAULT]
        user=${{ secrets.OCI_CLI_USER }}
        fingerprint=${{ secrets.OCI_FINGERPRINT }}
        tenancy=${{ secrets.OCI_CLI_TENANCY }}
        region=${{ secrets.OCI_CLI_REGION }}
        key_file=~/.oci/oci_api_key.pem
        EOF

        # Create the private key file from a secret
        echo "${{ secrets.OCI_KEY_FILE }}" > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/config

        echo "Verifying OCI authentication..."
        # This command will fail if any of the credentials are wrong.
        oci iam user get --user-id ${{ secrets.OCI_CLI_USER }} --output table

    - name: Run Health Check Script
      run: |
        chmod +x health-check.sh
        ./health-check.sh
      env:
        NODE1_INSTANCE_ID: ${{ secrets.NODE1_INSTANCE_ID }}
        NODE2_INSTANCE_ID: ${{ secrets.NODE2_INSTANCE_ID }}

    - name: Upload Logs on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: healthcheck-logs
        path: logs/